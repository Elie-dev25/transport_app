@startuml Diagramme_Composants_Transport_UDM
' =============================================
' Diagramme de composants du système Transport UdM
' =============================================
skinparam defaultFontName Arial
skinparam shadowing false
skinparam dpi 150
left to right direction
skinparam componentStyle rectangle

' Interfaces
interface IAuth
interface IUserMgmt
interface IBusMgmt
interface IDocumentMgmt
interface ICarburation
interface IVidange
interface IPannes
interface IDepannage
interface ITrajets
interface IReporting
interface IExport
interface INotifications
interface IPresence
interface IFuelAlert

' Couches / Packages
package "Front-end" {
  [Web UI] as UI <<component>>
}

package "API (Flask Blueprints / Controllers)" {
  [AuthController] as CAuth <<component>>
  [UserController] as CUser <<component>>
  [BusController] as CBus <<component>>
  [DocumentController] as CDoc <<component>>
  [CarburationController] as CCarb <<component>>
  [VidangeController] as CVid <<component>>
  [PanneController] as CPan <<component>>
  [DepannageController] as CDep <<component>>
  [TrajetController] as CTraj <<component>>
  [ReportingController] as CRep <<component>>
  [PresenceController] as CPre <<component>>
}

package "Services (Domaine)" {
  [AuthService] as SAuth <<component>>
  [UserService] as SUser <<component>>
  [BusService] as SBus <<component>>
  [DocumentService] as SDoc <<component>>
  [CarburationService] as SCarb <<component>>
  [VidangeService] as SVid <<component>>
  [PanneService] as SPan <<component>>
  [DepannageService] as SDep <<component>>
  [TrajetService] as STraj <<component>>
  [ReportingService] as SRep <<component>>
  [PresenceService] as SPre <<component>>
  [ExportService] as SExp <<component>>
  [NotificationService] as SNotif <<component>>
  [FuelAlertService] as SFuel <<component>>
}

package "Données" {
  [ORM SQLAlchemy (Models)] as ORM <<component>>
  database "Base de Données (SQLite/MySQL)" as DB
}

package "Infrastructure" {
  [Flask-Login] as FLogin <<component>>
  [Scheduler (cron)] as Sched <<component>>
}

package "Systèmes Externes" {
  [Service Email/SMS] as ExtMsg <<external>>
  [SSO/IdP] as ExtSSO <<external>>
  [BI/ETL] as ExtBI <<external>>
  [Stockage Fichiers] as ExtFS <<external>>
}

' Exposition d'interfaces par les services
SAuth -u- IAuth
SUser -u- IUserMgmt
SBus -u- IBusMgmt
SDoc -u- IDocumentMgmt
SCarb -u- ICarburation
SVid -u- IVidange
SPan -u- IPannes
SDep -u- IDepannage
STraj -u- ITrajets
SRep -u- IReporting
SExp -u- IExport
SNotif -u- INotifications
SPre -u- IPresence
SFuel -u- IFuelAlert

' Utilisation d'interfaces par les Controllers
CAuth ..> IAuth
CUser ..> IUserMgmt
CBus  ..> IBusMgmt
CDoc  ..> IDocumentMgmt
CCarb ..> ICarburation
CVid  ..> IVidange
CPan  ..> IPannes
CDep  ..> IDepannage
CTraj ..> ITrajets
CRep  ..> IReporting
CPre  ..> IPresence

' UI -> Controllers
UI --> CAuth
UI --> CUser
UI --> CBus
UI --> CDoc
UI --> CCarb
UI --> CVid
UI --> CPan
UI --> CDep
UI --> CTraj
UI --> CRep
UI --> CPre

' Services -> ORM/DB
SUser  --> ORM
SBus   --> ORM
SDoc   --> ORM
SCarb  --> ORM
SVid   --> ORM
SPan   --> ORM
SDep   --> ORM
STraj  --> ORM
SRep   --> ORM
SPre   --> ORM
SFuel  --> ORM
ORM --> DB

' AuthN/AuthZ
CAuth --> SAuth
SAuth --> FLogin
SAuth --> ORM
FLogin ..> ExtSSO : optionnel (SSO)

' Notifications / Export
SNotif --> ExtMsg
SExp   --> ExtBI : optionnel
SDoc   --> ExtFS : upload

' Scheduler fuel alert
Sched --> SFuel
SFuel --> SNotif

' Dépendances transverses
CRep --> SExp
CPan --> SNotif : notifier panne
CDep --> SNotif : notifier résolution

' Légende
legend right
UI: Interface utilisateur (Flask/Jinja)
Controllers: Routes/Blueprints Flask (HTTP)
Services: logique métier
ORM: SQLAlchemy (models)
DB: Base de données (SQLite/MySQL)
Infrastructure: Login, Planif.
Externes: services tiers (SSO, Email/SMS, BI, Fichiers)
end legend

@enduml
