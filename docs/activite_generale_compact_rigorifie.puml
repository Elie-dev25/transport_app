@startuml Activite_Generale_Compacte_Rigorifiee
' =============================================
' Diagramme d’activité (compact, fidèle au code lu)
' Sources: app/routes/auth.py, app/routes/charge_transport.py, app/routes/mecanicien.py
' =============================================
skinparam defaultFontName Arial
skinparam shadowing false
skinparam dpi 140
skinparam wrapWidth 900
skinparam ActivityFontSize 12
scale 0.8
top to bottom direction

start
:Ouvrir application;
:Aller /login;
:Soumettre formulaire (login, mot_de_passe);
if (authenticate_mysql OK ?) then (Oui)
  :Déterminer rôle depuis groupes;
  if (ROLE == ADMIN or RESPONSABLE) then (ADMIN/RESP)
    :redirect -> admin.dashboard;\n(app.routes.auth.login)
  elseif (ROLE == CHARGE) then (CHARGE)
    :redirect -> charge_transport.dashboard;
  elseif (ROLE == CHAUFFEUR) then (CHAUFFEUR)
    :redirect -> chauffeur.dashboard;
  elseif (ROLE == MECANICIEN) then (MECANICIEN)
    :redirect -> mecanicien.dashboard;
  elseif (ROLE == SUPERVISEUR) then (SUPERVISEUR)
    :redirect -> superviseur.dashboard;
  else (autre)
    :redirect -> auth.login;
  endif
else (Non)
  :Flash erreur;\nRester sur login;
  stop
endif

' =====================
' CHARGE TRANSPORT (routes/charge_transport.py)
' =====================
partition "Charge Transport /dashboard" {
  :Charger stats du jour;\n(trajets AED, prestataire, trafic étudiants);
  :Initialiser formulaires: TrajetDepartForm,\nTrajetPrestataireForm, TrajetBanekaneRetourForm;
  if (submit TrajetDepartForm valid ?) then (Oui)
    :enregistrer_depart_aed(form, current_user);
    :Flash succès/erreur -> redirect /charge/dashboard;
  else (Non)
    :Si POST invalide -> Flash erreur;
  endif
}

partition "Charge Transport / AJAX" {
  :/charge/depart-aed (POST, XHR);
  if (form valid ?) then (Oui)
    :enregistrer_depart_aed -> JSON{success,msg};
  else (Non)
    :400 JSON erreur formulaire;
  endif
  :/charge/depart-prestataire (POST, XHR) -> enregistrer_depart_prestataire -> JSON;
  :/charge/depart-banekane-retour (POST, XHR) -> enregistrer_depart_banekane_retour -> JSON;
}

' =====================
' MECANICIEN (routes/mecanicien.py)
' =====================
partition "Mécanicien /dashboard" {
  :Lister BusUdM; calcul couleur seuil huile;\n(km_critique_huile vs kilometrage);
  :Afficher tableau synthèse bus;
}

partition "Mécanicien /vidange" {
  :build_bus_vidange_list();
  :get_vidange_history([numero]);
  :Afficher historique + post_url /enregistrer_vidange;
}

partition "Mécanicien /enregistrer_vidange (POST JSON)" {
  :enregistrer_vidange_common(data);
  if (ValueError ?) then (erreur)
    :rollback; 400 JSON;
  elseif (LookupError ?) then (introuvable)
    :rollback; 404 JSON;
  elseif (Exception ?) then (autre)
    :rollback; 500 JSON;
  else (OK)
    :JSON payload success;
  endif
}

partition "Mécanicien /bus_udm/<id> (AJAX)" {
  :POST /defaillant -> etat_vehicule='Défaillant' -> commit -> JSON;
  :POST /repare    -> etat_vehicule='En service' -> commit -> JSON;
  :POST /toggle_etat -> bascule BON/DEFAILLANT -> commit -> JSON;
}

stop
@enduml
