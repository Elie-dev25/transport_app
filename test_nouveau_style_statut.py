#!/usr/bin/env python3
"""
Test du nouveau style de statut chauffeur
"""

try:
    print("üé® TEST NOUVEAU STYLE STATUT CHAUFFEUR")
    print("=" * 50)
    
    from app import create_app
    from app.models.utilisateur import Utilisateur
    from app.models.chauffeur import Chauffeur
    from app.models.chauffeur_statut import ChauffeurStatut
    from app.database import db
    from datetime import datetime, timedelta
    
    app = create_app()
    
    with app.app_context():
        print("‚úÖ Application cr√©√©e et contexte activ√©")
        
        # 1. V√©rifier l'utilisateur chauffeur
        user_chauffeur = Utilisateur.query.filter_by(login='chauffeur').first()
        if not user_chauffeur:
            print("‚ùå Utilisateur chauffeur non trouv√©")
            exit(1)
        
        print(f"‚úÖ Utilisateur trouv√©: {user_chauffeur.login}")
        
        # 2. V√©rifier le chauffeur correspondant
        chauffeur_db = Chauffeur.query.filter_by(
            nom=user_chauffeur.nom, 
            prenom=user_chauffeur.prenom
        ).first()
        
        if not chauffeur_db:
            print("‚ùå Chauffeur non trouv√© dans la table chauffeur")
            exit(1)
        
        print(f"‚úÖ Chauffeur trouv√©: ID {chauffeur_db.chauffeur_id}")
        
        # 3. Nettoyer les anciens statuts pour commencer proprement
        ChauffeurStatut.query.filter_by(chauffeur_id=chauffeur_db.chauffeur_id).delete()
        db.session.commit()
        
        # 4. Tester le statut par d√©faut "NON_SPECIFIE"
        print(f"\nüéØ TEST STATUT PAR D√âFAUT:")
        
        # Simuler la logique du dashboard
        statut_actuel = "NON_SPECIFIE"  # Valeur par d√©faut
        statuts_actuels = ChauffeurStatut.get_current_statuts(chauffeur_db.chauffeur_id)
        if statuts_actuels:
            statut_actuel = statuts_actuels[0].statut
        
        print(f"   ‚úÖ Statut par d√©faut: {statut_actuel}")
        
        # Mapper le statut pour l'affichage
        statut_display = {
            'CONGE': 'üü° En Cong√©',
            'PERMANENCE': 'üîµ Permanence', 
            'SERVICE_WEEKEND': 'üü£ Service Week-end',
            'SERVICE_SEMAINE': 'üîµ Service Semaine',
            'NON_SPECIFIE': '‚ö™ Non sp√©cifi√©'
        }.get(statut_actuel, f'‚ùì {statut_actuel}')
        
        print(f"   üì± Affichage: {statut_display}")
        
        # 5. Tester tous les statuts avec le nouveau style
        print(f"\nüé® TEST NOUVEAU STYLE POUR TOUS LES STATUTS:")
        
        statuts_test = ['CONGE', 'PERMANENCE', 'SERVICE_WEEKEND', 'SERVICE_SEMAINE']
        
        for statut in statuts_test:
            # Supprimer les anciens statuts
            ChauffeurStatut.query.filter_by(chauffeur_id=chauffeur_db.chauffeur_id).delete()
            
            # Cr√©er un nouveau statut
            nouveau_statut = ChauffeurStatut(
                chauffeur_id=chauffeur_db.chauffeur_id,
                statut=statut,
                date_debut=datetime.now() - timedelta(hours=1),
                date_fin=datetime.now() + timedelta(hours=1)
            )
            
            db.session.add(nouveau_statut)
            db.session.commit()
            
            # V√©rifier l'affichage
            statuts_test_actuels = ChauffeurStatut.get_current_statuts(chauffeur_db.chauffeur_id)
            if statuts_test_actuels:
                statut_test_actuel = statuts_test_actuels[0].statut
                
                # D√©tails du style pour chaque statut
                style_info = {
                    'CONGE': {
                        'nom': 'En Cong√©',
                        'couleur': 'D√©grad√© jaune/orange',
                        'icone': 'fa-calendar-times',
                        'effet': 'Hover avec √©l√©vation'
                    },
                    'PERMANENCE': {
                        'nom': 'Permanence',
                        'couleur': 'D√©grad√© bleu',
                        'icone': 'fa-clock',
                        'effet': 'Hover avec √©l√©vation'
                    },
                    'SERVICE_WEEKEND': {
                        'nom': 'Service Week-end',
                        'couleur': 'D√©grad√© violet',
                        'icone': 'fa-calendar-week',
                        'effet': 'Hover avec √©l√©vation'
                    },
                    'SERVICE_SEMAINE': {
                        'nom': 'Service Semaine',
                        'couleur': 'D√©grad√© bleu clair',
                        'icone': 'fa-calendar-day',
                        'effet': 'Hover avec √©l√©vation'
                    }
                }.get(statut_test_actuel, {})
                
                print(f"   ‚Ä¢ {statut}: {style_info.get('nom', statut)}")
                print(f"     - Couleur: {style_info.get('couleur', 'D√©faut')}")
                print(f"     - Ic√¥ne: {style_info.get('icone', 'fa-question')}")
                print(f"     - Effet: {style_info.get('effet', 'Aucun')}")
        
        # 6. Remettre le statut par d√©faut
        ChauffeurStatut.query.filter_by(chauffeur_id=chauffeur_db.chauffeur_id).delete()
        db.session.commit()
        
        print(f"\nüéØ NOUVEAU STYLE IMPL√âMENT√â:")
        print("‚úÖ Statut par d√©faut: 'Non sp√©cifi√©' (au lieu de 'Disponible')")
        print("‚úÖ Design moderne: Conteneurs avec d√©grad√©s et ombres")
        print("‚úÖ Ic√¥nes circulaires: Avec d√©grad√©s color√©s")
        print("‚úÖ Effets hover: √âl√©vation et ombres dynamiques")
        print("‚úÖ Typographie: Labels et valeurs s√©par√©s")
        print("‚úÖ Bouton d√©connexion: Supprim√© du top bar")
        print("‚úÖ Info utilisateur: Style moderne avec avatar")
        
        print(f"\nüé® CARACT√âRISTIQUES DU NOUVEAU DESIGN:")
        print("‚Ä¢ Backdrop blur: Effet de flou d'arri√®re-plan")
        print("‚Ä¢ Gradients: D√©grad√©s color√©s pour chaque statut")
        print("‚Ä¢ Shadows: Ombres port√©es avec effet de profondeur")
        print("‚Ä¢ Transitions: Animations fluides sur hover")
        print("‚Ä¢ Typography: Hi√©rarchie claire label/valeur")
        print("‚Ä¢ Icons: Ic√¥nes circulaires avec d√©grad√©s")
        
        print(f"\nüöÄ INSTRUCTIONS DE TEST:")
        print("1. Connectez-vous avec chauffeur/chauffeur123")
        print("2. Observez le nouveau style du statut dans le top bar")
        print("3. Le statut devrait afficher 'Non sp√©cifi√©' par d√©faut")
        print("4. Plus de bouton d√©connexion visible")
        print("5. Hover sur le statut pour voir l'effet d'√©l√©vation")
        
        print("\n" + "=" * 50)
        print("üé® TEST STYLE TERMIN√â")
        print("=" * 50)

except Exception as e:
    print(f"\n‚ùå ERREUR: {str(e)}")
    import traceback
    traceback.print_exc()
